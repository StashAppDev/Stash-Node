#######################################
# Gallery
#######################################

"""
Gallery type
"""
type Gallery {
  id: ID!
  checksum: String!
  path: String!
  title: String

  # Function
  files: [GalleryFilesType]
}

type GalleryFilesType {
  index: Int!
  name: String
  path: String
}

#######################################
# Scene
#######################################

type Scene {
  id: ID!
  title: String
  details: String
  url: String
  rating: Int
  path: String
  checksum: String
  size: String
  duration: Float

  # TODO
}

type FindScenesResultType {
  count: Int!
  scenes: [Scene]!
}

#######################################
# Tag
#######################################

type Tag {
  id: ID!
  name: String!
}

input TagCreateInput {
  name: String!
}

#######################################
# Filters
#######################################

enum SortDirectionEnum {
  ASC
  DESC
}

input FindFilterType {
  q: String
  page: Int
  per_page: Int
  sort: String
  direction: SortDirectionEnum
}

enum ResolutionEnum {
  "240p", LOW
  "480p", STANDARD
  "720p", STANDARD_HD
  "1080p", FULL_HD
  "4k", FOUR_K
}

input SceneFilterType {
  rating: Int
  resolution: ResolutionEnum
  # TODO
}

#############
# Root Schema
#############

type Query {
  findGallery(id: ID!): Gallery
  findTag(id: ID!): Tag
  findScenes(scene_filter: SceneFilterType, scene_ids: [Int], filter: FindFilterType): FindScenesResultType!
}

type Mutation {
  tagCreate(input: TagCreateInput!): Tag
}

schema {
  query: Query
  mutation: Mutation
}